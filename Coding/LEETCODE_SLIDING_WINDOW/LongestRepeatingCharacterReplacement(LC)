LEETCODE : 424. Longest Repeating Character Replacement (SLIDINGWINDOW + HASHMAP)

class Solution {
public:
    int characterReplacement(string s, int k) {
        int l = 0, maxFreq = 0, maxLen = 0;
        unordered_map<char, int> freqMap;

        for (int r = 0; r < s.size(); r++) {
            // Expand the window by adding the current character
            freqMap[s[r]]++;
            // Update the frequency of the most frequent character
            maxFreq = max(maxFreq, freqMap[s[r]]);

            // Check if the window is valid
            while ((r - l + 1) - maxFreq > k) {
                // Shrink the window from the left
                freqMap[s[l]]--;
                l++;
            }

            // Update the maximum length of the valid window
            maxLen = max(maxLen, r - l + 1);
        }

        return maxLen;
    }
};
