GFG: Prefix to Postfix Conversion (STACK)

class Solution {
  public:
    string preToPost(string s) {
        stack<string> st; // Stack to store intermediate infix expressions
        
        for (int i = s.length()-1; i>=0; i--) {
            // If the current character is an operand (letter or digit)
            if ((s[i] >= 'a' && s[i] <= 'z') || (s[i] >= 'A' && s[i] <= 'Z') || (s[i] >= '0' && s[i] <= '9')) {
                // Push it onto the stack as a string
                string op(1, s[i]); // Convert char to string
                st.push(op);
            }
            // If the current character is an operator
            else {
                // Pop the top two elements from the stack
                string operand1 = st.top();
                st.pop();
                string operand2 = st.top();
                st.pop();
                
        
                string res = operand1 + operand2 + s[i];
                
                // Push the result back onto the stack
                st.push(res);
            }
        }
        
        // The final string on the stack is the infix expression
        return st.top();
    
    }
};

