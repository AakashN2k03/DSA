LEETCODE: 3Sum (TWO POINTER)

// see once again striver optimal approach for this problem

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
      int i,j,k;
      int n=nums.size();
      vector<vector<int>> res;
      sort(nums.begin(),nums.end());
      
      for(int i=0;i<n-2;i++)
      { j=i+1;
        k=n-1;
        if(i>0 && nums[i]==nums[i-1]) continue;
        while(j<k)
        {
            int sum=nums[i]+nums[j]+nums[k];
            if(sum<0) j++;
            else if(sum>0) k--;
            else{
                vector<int>temp={nums[i],nums[j],nums[k]};
                res.push_back(temp);
                while(j<k && nums[j]==nums[j+1]) j++;
                while(j<k && nums[k]==nums[k-1]) k--;
                j++;
                k--;
            }
        }

      }
      return res;
    }
};
