class Solution {
  public:
    void mergeSort(vector<int>& arr, int low, int high) {
        if(low>=high) return;
        
        int mid;
        mid=(low+high)/2;
        mergeSort(arr,low,mid);// first half
        mergeSort(arr,mid+1,high);// second half
        merge(arr,low,mid,high);
    }
    
    void merge(vector<int>&arr,int low,int mid,int high)
    {
        vector<int>temp;
        int left,right;
        left=low;
        right=mid+1;
        // left<=mid -> first half 
        // right<=high -> second half 
        while(left<=mid && right<=high )
        {
            if(arr[left]<=arr[right])
            {
                temp.push_back(arr[left]);
                left++;
            }

            else {
                temp.push_back(arr[right]);
                right++;
            }
        }
        
        while(left<=mid)
        {
            temp.push_back(arr[left]);
            left++;
        }
        while(right<=high) 
        {
            temp.push_back(arr[right]);
            right++;
        }
        
        for(int i=low,j=0;i<=high;i++,j++)
        {
            arr[i]=temp[j];
        }
    }
};
