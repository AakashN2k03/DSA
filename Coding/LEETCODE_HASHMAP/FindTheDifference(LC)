LEETCODE: 389. Find the Difference (HASHMAP & XOR)

class Solution {
public:
    char findTheDifference(string s, string t) {
      
        unordered_map<char,int> map;
         unordered_map<char,int> map2;
        for(int i=0;i<s.length();i++)
        {
            map[s[i]]++;
        }
         for(int i=0;i<t.length();i++)
        {
            map2[t[i]]+
        }
       
        char res;
        for(auto& x:map2)
        {
            if(map[x.first]!=map2[x.first])
            {
                res=x.first;
            }
        }
        return res;

            }
};  // time complexity O(n^3)

                     

                       // ALTER METHOD (XOR)

class Solution {
public:
    char findTheDifference(string s, string t) {
      
        char res=0;
        for(char s1:s)
        {
            res^=s1;
        }

        for(char s2:t)
        {
            res^=s2;
        }

      return res;
            }
}; time complexity(O(n^2)) efficient than hashmap
