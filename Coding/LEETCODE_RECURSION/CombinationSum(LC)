LEETCODE: 39. Combination Sum (RECURSION)

class Solution {
public:
void comb_sum(int index,int target,vector<int>&arr,vector<vector<int>>& ans,vector<int>ds)
   {
       if(index==arr.size())
       {
        if(target==0)
        {
            ans.push_back(ds);
        }
        return;
       }
        //pick
       if(arr[index]<=target)
       {
         ds.push_back(arr[index]);
         comb_sum(index,target-arr[index],arr,ans,ds);
         ds.pop_back();
       }
       //not pick
       comb_sum(index+1,target,arr,ans,ds);
   }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> ds;
        comb_sum(0,target,candidates,ans,ds);
        return ans;
    }
};
