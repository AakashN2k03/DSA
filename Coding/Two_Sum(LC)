// LEETCODE 01-> HASHMAP
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
       unordered_map<int, int> hashmap; // Store the value and its index
        for (int i = 0; i < nums.size(); ++i) {
            int complement = target - nums[i];
            if (hashmap.find(complement) != hashmap.end()) {
                return {hashmap[complement], i}; // Return indices if complement is found
            }
            hashmap[nums[i]] = i; // Store the index of the current number
        }
        return {}; 
        
    }
};
